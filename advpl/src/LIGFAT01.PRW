#INCLUDE "RWMAKE.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "TBICONN.CH"
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³LIGFAT01 ºAUTOR  ³CASSIUS CARLOS MARTINS ºDATA ³ 14/05/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESC.     ³ ROTINA DE DISTRIBUICAO DE VALORES DE CONTRATO ENTRE AS EM- º±±
±±º          ³ PRESAS DO GRUPO LIGUE                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ LIGUE                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
USER FUNCTION LIGFAT01()
************************************
PRIVATE _CFILOLD  	:= CFILANT
PRIVATE _CPERG		:= "FAT01A"
PRIVATE _CNOTAS 	:= ""
PRIVATE _AITENS 	:= {} //{1-EMP/FIL, 2-SERIE, 3-PRODUTO, 4-QUANTIDADE, 5-PRECO UNITARIO, 6-VL TOTAL, 7-TES, 8-NUM PED}
PRIVATE _ANFGER 	:= {} //{1-EMP/FIL, 2-SERIE, 3-NOTA, 4-CLIENTE, 5-LOJA, 6-COND, 7-EMISSAO, 8-PREF, 9-VALOR, 10-CONTRATO}
PRIVATE _APDEMO		:= {} //{1-PRODUTO, 2-QUANT, 3-VL UNITARIO, 4-VL TOTAL}
PRIVATE _ATITULOS	:= {} //{1-PREF, 2-NUM, 3-PARC, 4-TIPO, 5-CLIENTE, 6-LOJA}
PRIVATE _NTTITEM	:= 0
PRIVATE _NTTDEMO	:= 0
PRIVATE _CIMPRUNI	:= "S" //S=SIM, N=NAO (IMPRIME TODOS BOLETOS EM UNICO ARQUIVO ?)
PRIVATE _CDIRPDF	:= "\PDF"
PRIVATE _LCONSOK	:= .F.
PRIVATE _CPROEXTRA	:= " "
 
IF ALLTRIM(FUNNAME())=="LIGFAT01"
	VALIDPERG()
	IF !PERGUNTE(_CPERG)
		RETURN
	ENDIF    
	
	_CCTRINI  := MV_PAR01
	_CCTRFIM  := MV_PAR02
	_CCONDINI  := MV_PAR03
	_CCONDFIM  := MV_PAR04
endif	 

PROCESSA({||FAT011()})

RETURN


STATIC FUNCTION FAT011() //PROCESSAMENTO DOS CONTRATOS
***************************************
LOCAL _NQTREGUA := 0

DBSELECTAREA("ADA")
DBSETORDER(1)
DBGOTOP()
WHILE !EOF()
	IF ADA->ADA_ULIBER=="S"//LIB FINANCEIRO
		_NQTREGUA++
	ENDIF
	DBSKIP()
ENDDO

PROCREGUA(_NQTREGUA)

DBSELECTAREA("ADA")
DBSETORDER(1)
DBGOTOP()
WHILE !EOF()                    
	
	IF ADA->ADA_ULIBER=="S" //LIB FINANCEIRO
		INCPROC("Processando...")
		
		_AITENS := {}
		_APDEMO	:= {}
		_ANFGER	:= {}
		_LCONSOK:= .F.
		
		IF (ADA->ADA_MSBLQL!="1" .OR. (ADA->ADA_MSBLQL=="1" .AND. ADA->ADA_UDTFEC<=ADA->ADA_UDTBLQ)) .AND. ADA->ADA_NUMCTR>=_CCTRINI .AND. ADA->ADA_NUMCTR<=_CCTRFIM .AND. ADA->ADA_CONDPG>=_CCONDINI .AND. ADA->ADA_CONDPG<=_CCONDFIM .AND. day(ddatabase)-1 = ADA_UDIAFE .AND. ADA->ADA_UDTFEC <> DDATABASE //.AND. ADA->ADA_UTIPO <> "V"
			
			//INICIO - PRODUTOS CONTRATO
			DBSELECTAREA("ADB")
			DBSETORDER(1)
			DBGOTOP()
			IF DBSEEK(XFILIAL("ADB")+ADA->ADA_NUMCTR)
				WHILE !EOF() .AND. ADB->ADB_FILIAL+ADB->ADB_NUMCTR==ADA->ADA_FILIAL+ADA->ADA_NUMCTR
					DBSELECTAREA("SB1")
					DBSETORDER(1)
					IF DBSEEK(XFILIAL("SB1")+ADB->ADB_CODPRO)
						
						IF EMPTY(ADA->ADA_UDTFEC)
							if month(ddatabase)==1
								_CDTULFEC := stod(strzero(year(ddatabase)-1,4)+"12"+strzero(day(ddatabase),2))
							else
								_CDTULFEC := stod(strzero(year(ddatabase),4)+strzero(month(ddatabase)-1,2)+strzero(day(ddatabase),2))
							endif
						else
							//Adicionado por causa dos contratos suspensos
							IF (DateDiffMonth(ADA->ADA_UDTFEC, ddatabase) > 1)
								_CDTULFEC := MonthSub(ddatabase,1)
							ELSE
								_CDTULFEC := ADA->ADA_UDTFEC
							ENDIF							
						endif
						
						 
						FAT01H(ADB->ADB_CODPRO,ADB->ADB_UDTINI, ADB->ADB_UDTFIM, ADB->ADB_QUANT, ADB->ADB_TOTAL)
						
						
					/*	_NAUXPRCVEN := 0
						_NVLITEM  := FAT01E(_CDTULFEC, ADB->ADB_UDTINI, ADB->ADB_UDTFIM, ADB->ADB_TOTAL)
						_NVLTOTAL := ROUND((_NVLITEM*SB1->B1_UPC01)/100,2)
						_NVLUNIT  := ROUND(_NVLTOTAL/ADB->ADB_QUANT,4)
						
						_NAUXPRCVEN := ROUND(_NVLITEM/ADB->ADB_QUANT,2)
						IF _NVLTOTAL>0
							AADD(_AITENS,{SB1->B1_UEMP01, SB1->B1_USER01, SB1->B1_COD, ADB->ADB_QUANT, _NVLUNIT, _NVLTOTAL, ADB->ADB_TES, " "})
							
							IF !EMPTY(SB1->B1_UPROD02)
								_NVLITEM  := FAT01E(_CDTULFEC, ADB->ADB_UDTINI, ADB->ADB_UDTFIM, ADB->ADB_TOTAL)
								_NVLTOTAL := NOROUND((_NVLITEM*SB1->B1_UPC02)/100,2)
								_NVLUNIT  := NOROUND(_NVLTOTAL/ADB->ADB_QUANT,4)
								AADD(_AITENS,{SB1->B1_UEMP02, SB1->B1_USER02, SB1->B1_UPROD02, ADB->ADB_QUANT, _NVLUNIT, _NVLTOTAL, ADB->ADB_TES, " "})
							ENDIF
													
						ENDIF
						//VAI IMPRIMIR NO DEMONSTRATIVO MESMO COM VALOR ZERADO */
						//AADD(_APDEMO,{SB1->B1_COD, ADB->ADB_QUANT, _NAUXPRCVEN/*ADB->ADB_PRCVEN*/, _NAUXPRCVEN*ADB->ADB_QUANT /*ADB->ADB_TOTAL*/,""}) 
						
						_NVLEXT := 0
												
						//INICIO - CONSUMO EXTRA  - VERIFICADO PARA CADA ITEM DO CONTRATO
						IF !EMPTY(SB1->B1_UPRDEXT) .AND. !_LCONSOK
							
							_LCONSOK   := .T.
							
							_CPROEXTRA := SB1->B1_UPRDEXT
							_CTESEXTRA := GETMV("MV_UTESEXT")
							_CNRCOB	   := ADA->ADA_UNRCOB
							
							_CDTBLQCTR := DTOC(ADA->ADA_UDTBLQ)
							
							IF ADA->ADA_UTIPO=="F" //FTTH
								
								_AREAADA   := ADA->(GETAREA())
								_AREAADB   := ADB->(GETAREA())
								_NCONNSQL  := ADVCONNECTION() //PEGA CONEXAO MSSQL
								_NCONNPTG  := TCLINK("POSTGRES/PostGreLigue","10.0.1.98",7890) //CONECTA AO POSTGRES
								
								_CQUERY := " SELECT SUM(CDR.TOTAL) TOTAL "
								_CQUERY += " FROM TELEFONIA.CDR CDR "
								_CQUERY += " WHERE CDR.ACCOUNTCODE = '"+_CNRCOB+"' "
								IF ADA->ADA_UDTBLQ>_CDTULFEC
									_CQUERY += " AND CDR.DATA >= '"+_CDTBLQCTR+"' "
								ELSE
									_CQUERY += " AND CDR.DATA >= '"+DTOC(_CDTULFEC)+"' "
								ENDIF
								_CQUERY += " AND CDR.DATA < '"+DTOC(DDATABASE)+"' " //ATE DIA ANTERIOR
								IF SELECT("TRB0")!=0
									TRB0->(DBCLOSEAREA())
								ENDIF
								TCQUERY _CQUERY NEW ALIAS "TRB0"
								_NVLEXT := TRB0->TOTAL
								
								TRB0->(DBCLOSEAREA())
								
								TCUNLINK(_NCONNPTG)  //FECHA CONEXAO POSTGRES
								TCSETCONN(_NCONNSQL) //RETORNA CONEXAO MSSQL
								
								RESTAREA(_AREAADA)
								RESTAREA(_AREAADB)
							endif	
							IF ADA->ADA_UTIPO=="V" //VOIP
								
								_NVLFRANQ  := ADB->ADB_TOTAL
								_AREAADA   := ADA->(GETAREA())
								_AREAADB   := ADB->(GETAREA())
								_NCONNSQL  := ADVCONNECTION() //PEGA CONEXAO MSSQL
								_NCONNMYS  := TCLINK("MYSQL/MySqlLigue","10.0.1.98",7890) //CONECTA AO MYSQL
								TCSETCONN(_NCONNMYS)  
								
								IF ADA->ADA_UDTBLQ>_CDTULFEC
									_CDTDE := YEAR2STR(CTOD(_CDTBLQCTR))
									_CDTDE += "-"
									_CDTDE += MONTH2STR(CTOD(_CDTBLQCTR))
									_CDTDE += "-"
									_CDTDE += DAY2STR(CTOD(_CDTBLQCTR))
								ELSE
									_CDTDE := YEAR2STR(_CDTULFEC)
									_CDTDE += "-"
									_CDTDE += MONTH2STR(_CDTULFEC)
									_CDTDE += "-"
									_CDTDE += DAY2STR(_CDTULFEC)
								ENDIF
								
								_CDTATE := YEAR2STR(DDATABASE)
								_CDTATE += "-"
								_CDTATE += MONTH2STR(DDATABASE)
								_CDTATE += "-"
								_CDTATE += DAY2STR(DDATABASE)
								
								_CQUERY := " SELECT SUM(C.COST) TOTAL "
								_CQUERY += " FROM CALLS C, CLIENTSSHARED CLI "
								_CQUERY += " WHERE C.ID_CLIENT = CLI.ID_CLIENT "
								_CQUERY += " AND CLI.ID_INTEGRADOR = "+_CNRCOB
								IF !EMPTY(STOD(STRTRAN(_CDTDE,"-","")))
									_CQUERY += " AND C.CALL_START >= '"+_CDTDE+"' "
								ENDIF
								_CQUERY += " AND C.CALL_START < '"+_CDTATE+"' " //ATE DIA ANTERIOR
								IF SELECT("TRB0")!=0
									TRB0->(DBCLOSEAREA())
								ENDIF
								TCQUERY _CQUERY NEW ALIAS "TRB0"
								
								IF _NVLFRANQ>=TRB0->TOTAL
									_NVLEXT := 0
								ELSE
									_NVLEXT := TRB0->TOTAL-_NVLFRANQ
								ENDIF
								
								TRB0->(DBCLOSEAREA())
								
								TCUNLINK(_NCONNMYS)  //FECHA CONEXAO MYSQL
								TCSETCONN(_NCONNSQL) //RETORNA CONEXAO MSSQL
								
								RESTAREA(_AREAADA)
								RESTAREA(_AREAADB)
								
							ENDIF
							
							DBSELECTAREA("SB1")
							DBSETORDER(1)
							IF DBSEEK(XFILIAL("SB1")+_CPROEXTRA)
								
								_NVLTOTAL := ROUND((_NVLEXT*SB1->B1_UPC01)/100,2)
								_NVLUNIT  := _NVLTOTAL
								
								IF _NVLTOTAL > 0
									AADD(_AITENS,{SB1->B1_UEMP01, SB1->B1_USER01, SB1->B1_COD, 1, _NVLUNIT, _NVLTOTAL, _CTESEXTRA, " "})
								ENDIF
								
								IF !EMPTY(SB1->B1_UPROD02)
									_NVLTOTAL := ROUND((_NVLEXT*SB1->B1_UPC02)/100,2)
									_NVLUNIT  := ROUND(_NVLTOTAL/ADB->ADB_QUANT,2)
									
									AADD(_AITENS,{SB1->B1_UEMP02, SB1->B1_USER02, SB1->B1_UPROD02, 1, _NVLUNIT, _NVLTOTAL, _CTESEXTRA, " "})
								ENDIF
								

								AADD(_APDEMO,{SB1->B1_COD, 1, _NVLUNIT, _NVLTOTAL,""})
							ENDIF
						ENDIF
						//FIM - CONSUMO EXTRA
					ENDIF //IF DO SB1
					DBSELECTAREA("ADB")
					DBSKIP()
				ENDDO
				//FIM - PRODUTOS CONTRATO
			ENDIF //IF DO ADB
			//INICIO - SERVICOS EXTRA - FIELD SERVICE SEM VINCULO COM CONTRATOS - SE GEROU SZ2 ENTAO VEIO DO TV CASO CONTRATO EH SERVICO AVULSO
			_CQUERY := " SELECT ABA.*, AA5.AA5_TES, AA5.AA5_PRCCLI, AA5.AA5_DESCRI "
			_CQUERY += " FROM "+RETSQLNAME("ABA")+" ABA "
			_CQUERY += " INNER JOIN "+RETSQLNAME("AB6")+" AB6 ON AB6.AB6_FILIAL=ABA.ABA_FILIAL AND AB6.AB6_NUMOS=SUBSTRING(ABA.ABA_NUMOS,1,6) AND AB6.AB6_STATUS<>'A' AND AB6.D_E_L_E_T_=' ' "
			_CQUERY += " INNER JOIN "+RETSQLNAME("AB9")+" AB9 ON ABA.ABA_FILIAL=AB9.AB9_FILIAL AND AB9.AB9_NUMOS=ABA.ABA_NUMOS "
			_CQUERY += " INNER JOIN "+RETSQLNAME("AA5")+" AA5 ON ABA.ABA_CODSER=AA5.AA5_CODSER AND AA5.AA5_PRCCLI>0 AND AA5.D_E_L_E_T_=' ' "
			_CQUERY += " WHERE AB9.D_E_L_E_T_=' ' "
			_CQUERY += " AND AB9.AB9_DTFIM >= '"+DTOS(_CDTULFEC)+"' "
			_CQUERY += " AND AB9.AB9_DTFIM <= '"+DTOS(DDATABASE)+"' "
			_CQUERY += " AND AB6.AB6_CODCLI = '"+ADA->ADA_CODCLI+"' "
			_CQUERY += " AND AB6.AB6_LOJA = '"+ADA->ADA_LOJCLI+"' "
			_CQUERY += " AND ABA.ABA_UTOTAL > 0 "
			_CQUERY += " AND AB6.AB6_UNUMCT = '"+ADA->ADA_NUMCTR+"' "
			_CQUERY += " AND ABA.D_E_L_E_T_ = ' ' "
			_CQUERY += " AND NOT EXISTS(SELECT Z2.Z2_NUMOS "
			_CQUERY += "                FROM "+RETSQLNAME("SZ2")+" Z2 "
			_CQUERY += "                WHERE Z2.Z2_FILIAL = '"+XFILIAL("SZ2")+"' "
			_CQUERY += "                AND Z2.Z2_NUMOS = SUBSTRING(ABA.ABA_NUMOS,1,6) "
			_CQUERY += "                AND Z2.D_E_L_E_T_ = ' ') "
			_CQUERY += " ORDER BY ABA.ABA_FILIAL, ABA.ABA_NUMOS "
			_CQUERY := CHANGEQUERY(_CQUERY)
			IF SELECT("TRAB8")!=0
				TRAB8->(DBCLOSEAREA())
			ENDIF
			TCQUERY _CQUERY NEW ALIAS "TRAB8"
			DBSELECTAREA("TRAB8")
			DBGOTOP()
			WHILE !EOF()
				DBSELECTAREA("SB1")
				DBSETORDER(1)
				IF DBSEEK(XFILIAL("SB1")+TRAB8->ABA_CODPRO)
					
					_NVLITEM  := ROUND((TRAB8->ABA_UTOTAL*TRAB8->AA5_PRCCLI)/100,2) //SOMENTE PERCENTUAL FATURADO PARA O CLIENTE - AA5_PRCCLI
					_NVLTOTAL := ROUND((_NVLITEM*SB1->B1_UPC01)/100,2)
					_NVLUNIT  := ROUND(_NVLTOTAL/TRAB8->ABA_QUANT,2)
					
					AADD(_AITENS,{SB1->B1_UEMP01, SB1->B1_USER01, SB1->B1_COD, TRAB8->ABA_QUANT, _NVLUNIT, _NVLTOTAL, TRAB8->AA5_TES, " "})
					
					IF !EMPTY(SB1->B1_UPROD02)
						_NVLITEM  := ROUND((TRAB8->ABA_UTOTAL*TRAB8->AA5_PRCCLI)/100,2) //SOMENTE PERCENTUAL FATURADO PARA O CLIENTE - AA5_PRCCLI
						_NVLTOTAL := ROUND((_NVLITEM*SB1->B1_UPC02)/100,2)
						_NVLUNIT  := ROUND(_NVLTOTAL/TRAB8->ABA_QUANT,2)
						
						AADD(_AITENS,{SB1->B1_UEMP02, SB1->B1_USER02, SB1->B1_UPROD02, TRAB8->ABA_QUANT, _NVLUNIT, _NVLTOTAL, TRAB8->AA5_TES, " "})
					ENDIF
					
					AADD(_APDEMO,{SB1->B1_COD, TRAB8->ABA_QUANT, _NVLITEM, _NVLITEM*TRAB8->ABA_QUANT,TRAB8->AA5_DESCRI})
				ENDIF
				DBSELECTAREA("TRAB8")
				DBSKIP()
			ENDDO
			TRAB8->(DBCLOSEAREA())
			//FIM - SERVICOS EXTRA - FIELD SERVICE E/OU PEDIDOS PENDENTES
			
			_NTTDESC := 0
			
			DBSELECTAREA("SZ5")
			DBSETORDER(1)
			IF DBSEEK(XFILIAL("SZ5")+ADA->ADA_NUMCTR)
				WHILE !EOF() .AND. SZ5->Z5_FILIAL+SZ5->Z5_NUMCTR == XFILIAL("SZ5")+ ADA->ADA_NUMCTR
					IF SZ5->Z5_QTDCOB > 0
					
						IF Z5_TIPO = '1' // TIPO DE DESCONTO
							_NTTDESC += Z5_TOTAL
						ELSE
							FAT01H(SZ5->Z5_PRODNF, MonthSub(ddatabase,1),ddatabase, SZ5->Z5_QUANT, SZ5->Z5_TOTAL)
						ENDIF
																
						DBSELECTAREA("SZ5")
						RECLOCK("SZ5",.F.)
							 SZ5->Z5_QTDCOB := SZ5->Z5_QTDCOB - 1
						MSUNLOCK()																
					ENDIF	
					
				DBSELECTAREA("SZ5")
				DBSKIP()
				ENDDO
			ENDIF			
			
			
			//INICIO - RETIRAR DIFERENCA DE VALOR (FATURAMENTO X CONTRATO)
			_NTTITEM := 0
			_NTTDEMO := 0
			
			FOR _I:=1 TO LEN(_AITENS)
				_NTTITEM += _AITENS[_I,6] //PEGAR TOTAL QUE VAI PARO OS DOS PEDIDOS DE VENDA
			NEXT _I
			
			FOR _I:=1 TO LEN(_APDEMO)
				_NTTDEMO += _APDEMO[_I,4] //PEGAR O TOTAL QUE VAI PARA GERAR FATURA
			NEXT _I
			
			IF _NTTITEM!=_NTTDEMO .AND. LEN(_AITENS)>0
				_LDIFOK	:= .F.
				_NVLDIF := _NTTDEMO-_NTTITEM
				
				_NTENT := 0 //FORCA TIRAR DIF DE ALGUM PRODUTO COM QUANTIDADE IGUAL A 1 (UM) PARA NAO CORRER RISCO DE NOVA DIFERENCA
				WHILE !_LDIFOK .AND. LEN(_AITENS)>_NTENT
					_NP := LEN(_AITENS)-_NTENT
					IF _AITENS[_NP,4]==1 .AND. ALLTRIM(_AITENS[_NP,3])!=_CPROEXTRA .AND. EMPTY(_AITENS[_NP,8])
						_AITENS[_NP,5] := _AITENS[_NP,5]+_NVLDIF
						_AITENS[_NP,6] := _AITENS[_NP,6]+_NVLDIF
						_LDIFOK := .T.
					ELSE
						_NTENT++
					ENDIF
				ENDDO
				
				IF !_LDIFOK //SE NAO AJUSTAR VIA REGRAS ANTERIORES TIRA DO ULTIMO
					_NP := LEN(_AITENS)
					//_AITENS[_NP,5] := _AITENS[_NP,5]+_NVLDIF
					_AITENS[_NP,6] := _AITENS[_NP,6]+_NVLDIF
					_LDIFOK := .T.
				ENDIF
	
			ENDIF
			//FIM - RETIRAR DIFERENCA DE VALOR (FATURAMENTO X CONTRATO)
			
			//CALCULAR EM CIMA DO VALOR JÁ AJUSTADO
			_NTTFATU := 0
			FOR _I:=1 TO LEN(_AITENS)
				_NTTFATU += _AITENS[_I,6] //PEGAR TOTAL QUE VAI PARA FATURA
			NEXT _I
			
			IF _NTTFATU > 0
			 	_PRCDES := 0
					IF _NTTDESC > 0
						_PRCDES := _NTTDESC * 100 / _NTTFATU
						_NTTDESC := _NTTDESC * -1
						AADD(_APDEMO,{"DESCON", 1, _NTTDESC, _NTTDESC,"DESCONTO"})
					ENDIF
				
				FAT01A(_PRCDES) //GERAR PED/NOTA
				FAT01F() //AJUSTAR FINANCEIRO
			
				DBSELECTAREA("ADA")
			
				RECLOCK("ADA",.F.)
					ADA->ADA_UDTFEC := DDATABASE
				MSUNLOCK()
			ENDIF							
			
			
		ENDIF
	ENDIF
	                                
	DBSELECTAREA("ADA")
	DBSKIP()
ENDDO

IF _CIMPRUNI=="S"
	//U_LIGFAT02(,,,,,,_ATITULOS,,.T.) //IMPRIMIR BOLETO
	U_LIGFAT16(,,,,,,_ATITULOS,,.T.) //IMPRIMIR BOLETO
ENDIF

MSGINFO("NOTAS GERADAS : "+CHR(10)+CHR(13)+_CNOTAS)

//RPCCLEARENV()
//RPCSETTYPE(3)
//RPCSETENV(CEMPANT,_CFILOLD,,,"FAT")

CFILANT := _CFILOLD

RETURN


STATIC FUNCTION FAT01A(_prcDesc) //GERAR PEDIDO FAT01
*************************************
LOCAL _AREA 	:= GETAREA()
LOCAL _APVEXTRA	:= {}

_AITENS  := ASORT(_AITENS,,,{|X,Y|X[1]+X[2]+X[3]<Y[1]+Y[2]+Y[3]})

_CEMPFIL := " "
_CSERIE  := " "
_CITEM   := "00"
AITEMPED := {}

//BEGIN TRANSACTION

FOR _I:=1 TO LEN(_AITENS)
	
	IF EMPTY(_AITENS[_I,8]) //JA EXISTE PEDIDO
		
		IF _AITENS[_I,1]!=_CEMPFIL .OR. _AITENS[_I,2]!=_CSERIE
			
			IF !EMPTY(_CEMPFIL) .AND. !EMPTY(_CSERIE) .AND. !EMPTY(AITEMPED)
				LMSERROAUTO := .F.
				MSEXECAUTO({|A,B,C| MATA410(A,B,C)},ACAB,AITEMPED,3)
				IF LMSERROAUTO
					MOSTRAERRO()
					//DISARMTRANSACTION()
					RETURN()
				ELSE
					DBSELECTAREA("SC5")
					RECLOCK("SC5",.F.)
					SC5->C5_UPVFAT := "S"
					MSUNLOCK()
					
					FAT01B() //REMOVE SC9
					FAT01C() //LIBERA PEDIDO
					FAT01D(SC5->C5_NUM, _CSERIE) //GERA NOTA
				ENDIF
			ENDIF
			
			//WFPREPENV("01",_AITENS[_I,1])
			
			//RESET ENVIRONMENT
			
			//RPCSETTYPE(3)
			
			//PREPARE ENVIRONMENT EMPRESA "01" FILIAL _AITENS[_I,1] MODULO "FAT"
			
			CFILANT := _AITENS[_I,1]
			
			//_CNUM := GETSXENUM("SC5","C5_NUM")
			
			ACAB := {{"C5_TIPO"      , "N"          			, NIL},;
			{"C5_CLIENTE"   , ADA->ADA_CODCLI  	   		, NIL},;
			{"C5_LOJACLI"   , ADA->ADA_LOJCLI 	   		, NIL},;
			{"C5_CONDPAG"   , ADA->ADA_CONDPG			, NIL},;
			{"C5_VEND1" 	, ADA->ADA_VEND1			, NIL},;
			{"C5_VEND2" 	, ADA->ADA_VEND2			, NIL}}
			
			AITEMPED := {}
			
			_CEMPFIL := _AITENS[_I,1]
			_CSERIE  := _AITENS[_I,2]
			_CITEM	 := "00"
			
		ENDIF
		
		_CITEM := SOMA1(_CITEM)
		
		//{1-EMP/FIL, 2-SERIE, 3-PRODUTO, 4-QUANTIDADE, 5-PRECO UNITARIO, 6-VL TOTAL, 7-TES, 8-NUM PED}
		IF _AITENS[_I,5] > 0
			AADD(AITEMPED,{{"C6_ITEM"		,_CITEM								,NIL},;
			{"C6_PRODUTO"		,_AITENS[_I,3]						,NIL},;
			{"C6_QTDVEN"		,_AITENS[_I,4]						,NIL},;
			{"C6_PRVEN"		,_AITENS[_I,5]			   			,NIL},;
			{"C6_PRUNIT"		,_AITENS[_I,5]						,NIL},;
			{"C6_DESCONT"		,_prcDesc						,NIL},;
			{"C6_TES"	   		,_AITENS[_I,7]						,NIL}})
		ENDIF
		
	ELSE
		
		_NP := ASCAN(_APVEXTRA,{|X|X[1]+X[2]==_AITENS[_I,1]+_AITENS[_I,8]+_AITENS[_I,2]})
		IF _NP==0
			AADD(_APVEXTRA,{_AITENS[_I,1],_AITENS[_I,8],_AITENS[_I,2]})
		ENDIF
		
	ENDIF
	
NEXT _I

IF !EMPTY(_CEMPFIL) .AND. !EMPTY(_CSERIE) .AND. !EMPTY(AITEMPED)
	LMSERROAUTO := .F.
	MSEXECAUTO({|A,B,C| MATA410(A,B,C)},ACAB,AITEMPED,3)
	IF LMSERROAUTO
		MOSTRAERRO()
		//DISARMTRANSACTION()
		RETURN()
	ELSE
		DBSELECTAREA("SC5")
		RECLOCK("SC5",.F.)
		SC5->C5_UPVFAT := "S"
		MSUNLOCK()
		
		FAT01B() //REMOVE SC9
		FAT01C() //LIBERA PEDIDO
		FAT01D(SC5->C5_NUM, _CSERIE) //GERA NOTA
	ENDIF
ENDIF

FOR _I:=1 TO LEN(_APVEXTRA) //FATURA OS PEDIDOS EXTRA
	
	CFILANT := _APVEXTRA[_I,1]
	
	DBSELECTAREA("SC5")
	DBSETORDER(1)
	IF DBSEEK(_APVEXTRA[_I,1]+_APVEXTRA[_I,2])
		
		FAT01B() //REMOVE SC9
		FAT01C() //LIBERA PEDIDO
		FAT01D(SC5->C5_NUM, _APVEXTRA[_I,3]) //GERA NOTA
	ENDIF
NEXT _I

//END TRANSACTION

RESTAREA(_AREA)
RETURN



STATIC FUNCTION FAT01B() //ALTERA PARA REMOVER SC9
*************************************
LOCAL _ACAB1	:= {}
LOCAL _AITEPED	:= {}

DBSELECTAREA("SC5")
_CQR := "SELECT COUNT(1) QT "
_CQR += "  FROM "+RETSQLNAME("SC9")+" SC9 "
_CQR += " WHERE SC9.C9_FILIAL = '"+SC5->C5_FILIAL+"' "
_CQR += "   AND SC9.C9_PEDIDO = '"+SC5->C5_NUM+"' "
_CQR += "   AND SC9.C9_NFISCAL = ' ' "
_CQR += "   AND SC9.D_E_L_E_T_<> '*' "
_CQR := CHANGEQUERY(_CQR)
TCQUERY _CQR NEW ALIAS "PRC9"
IF PRC9->QT>0
	_ACAB1   := {{"C5_NUM",SC5->C5_NUM,NIL}}
	_AITEPED := {}
	DBSELECTAREA("SC6")
	DBSETORDER(1)
	DBGOTOP()
	IF DBSEEK(SC5->C5_FILIAL+SC5->C5_NUM)
		WHILE !EOF() .AND. SC6->C6_FILIAL+SC6->C6_NUM == SC5->C5_FILIAL+SC5->C5_NUM
			AADD(_AITEPED,{ {"C6_NUM" 		,SC6->C6_NUM		,NIL},;
			{"C6_ITEM" 		,SC6->C6_ITEM		,NIL},;
			{"C6_PRODUTO" 	,SC6->C6_PRODUTO	,NIL},;
			{"C6_QTDVEN" 	,SC6->C6_QTDVEN		,NIL},;
			{"C6_PRCVEN" 	,SC6->C6_PRCVEN		,NIL},;
			{"C6_VALOR" 	,SC6->C6_VALOR		,NIL},;
			{"C6_TES" 		,SC6->C6_TES		,NIL}})
			DBSKIP()
		ENDDO
		LMSERROAUTO := .F.
		LMSHELPAUTO := .T.
		MSEXECAUTO({|X,Y,Z| MATA410(X,Y,Z)},_ACAB1,_AITEPED,4)
		IF LMSERROAUTO
			MOSTRAERRO()
		ENDIF
	ENDIF
ENDIF
PRC9->(DBCLOSEAREA())
RETURN



STATIC FUNCTION FAT01C() //LIBERA PEDIDO
******************************************
LOCAL NQTD := 0
PRIVATE LBLQCRD := .T.
PRIVATE LBLQEST := .T.

DBSELECTAREA("SC6")
DBSETORDER(1)
DBGOTOP()
IF DBSEEK(SC5->C5_FILIAL+SC5->C5_NUM)
	WHILE !EOF() .AND. SC6->C6_FILIAL+SC6->C6_NUM==SC5->C5_FILIAL+SC5->C5_NUM
		//---------------------------------------------------------------------------
		//     ROTINA MALIBDOFAT: LIBERA OS ITENS DE PEDIDO DE VENDAS
		//---------------------------------------------------------------------------
		//     PARAMETROS
		//---------------------------------------------------------------------------
		//          ³EXPN1: REGISTRO DO SC6
		//          ³EXPN2: QUANTIDADE A LIBERAR
		//          ³EXPL3: BLOQUEIO DE CREDITO
		//          ³EXPL4: BLOQUEIO DE ESTOQUE
		//          ³EXPL5: AVALIACAO DE CREDITO
		//          ³EXPL6: AVALIACAO DE ESTOQUE
		//          ³EXPL7: PERMITE LIBERACAO PARCIAL
		//          ³EXPL8: TRANFERE LOCAIS AUTOMATICAMENTE
		//          ³EXPA9: EMPENHOS ( CASO SEJA INFORMADO NAO EFETUA A GRAVACAO
		//          ³       APENAS AVALIA ).
		//          ³EXPBA: CODEBLOCK A SER AVALIADO NA GRAVACAO DO SC9
		//          ³EXPAB: ARRAY COM EMPENHOS PREVIAMENTE ESCOLHIDOS
		//          ³       (IMPEDE SELECAO DOS EMPENHOS PELAS ROTINAS)
		//          ³EXPLC: INDICA SE APENAS ESTA TROCANDO LOTES DO SC9
		//          ³EXPND: VALOR A SER ADICIONADO AO LIMITE DE CREDITO
		//          ³EXPNE: QUANTIDADE A LIBERAR - SEGUNDA UM
		
		//ABRE O CABECALHO DOS PEDIDOS
		SC5->(DBSETORDER(1))
		SC5->(MSSEEK(XFILIAL("SC5")+SC5->C5_NUM))
		
		//ABRE OS ITENS DOS PEDIDOS
		SC6->(DBSETORDER(1))
		SC6->(MSSEEK(XFILIAL("SC6")+SC6->C6_NUM+SC6->C6_ITEM+SC6->C6_PRODUTO))
		
		SE4->(DBSETORDER(1))
		SE4->(MSSEEK(XFILIAL("SE4")+SC5->C5_CONDPAG) ) //FILIAL+CONDICAO PAGTO
		
		SB1->(DBSETORDER(1))
		SB1->(MSSEEK(XFILIAL("SB1")+SC6->C6_PRODUTO))    //FILIAL+PRODUTO
		
		DBSELECTAREA("SB2")
		DBSETORDER(1)
		IF !DBSEEK(XFILIAL("SB2")+SC6->C6_PRODUTO+SC6->C6_LOCAL)
			RECLOCK("SB2",.T.)
			SB2->B2_FILIAL := XFILIAL("SB2")
			SB2->B2_COD    := SC6->C6_PRODUTO
			SB2->B2_LOCAL  := SC6->C6_LOCAL
			MSUNLOCK()
		ENDIF
		
		SF4->(DBSETORDER(1))
		SF4->(MSSEEK(XFILIAL("SF4")+SC6->C6_TES))   //FILIAL+TES
		DBSELECTAREA('SC6')
		
		NQTD += MALIBDOFAT(SC6->(RECNO()),SC6->C6_QTDVEN, @LBLQCRD, @LBLQEST, .F., .F. )
		
		DBSELECTAREA("SC6")
		DBSKIP()
		
	ENDDO
ENDIF
IF NQTD > 0
	//VERIFICA SE EXISTE BLOQUEIO DE CRéDITO OU ESTOQUE, SE EXISTIR DESBLOQUEIA
	MALIBEROK( { SC5->C5_NUM }, .F. )
ENDIF

RETURN



STATIC FUNCTION FAT01D(_PPEDIDO,_PSERIE) //GERAR NOTA FISCAL
**************************************************************
LOCAL APVLNFS     	:= {}
LOCAL NPRCVEN     	:= 0
LOCAL CNOTAAUX		:= ""
LOCAL NVLNOTA		:= 0

DBSELECTAREA("SC9")
DBSETORDER(1)
IF DBSEEK(XFILIAL("SC9")+_PPEDIDO)
	WHILE !EOF() .AND. SC9->C9_FILIAL+SC9->C9_PEDIDO==XFILIAL("SC9")+_PPEDIDO
		IF EMPTY(SC9->C9_BLEST) .AND. EMPTY(SC9->C9_BLCRED) .AND. EMPTY(SC9->C9_BLOQUEI)
			//SOMA TOTAL DA NOTA
			NVLNOTA += (SC9->C9_QTDLIB*SC9->C9_PRCVEN)
			
			//ABRE O CABECALHO DOS PEDIDOS
			SC5->(DBSETORDER(1))
			SC5->(MSSEEK(XFILIAL("SC5")+SC9->C9_PEDIDO))
			
			//ABRE OS ITENS DOS PEDIDOS
			SC6->(DBSETORDER(1))
			SC6->(MSSEEK(XFILIAL("SC6")+SC9->C9_PEDIDO+SC9->C9_ITEM+SC9->C9_PRODUTO))
			
			SE4->(DBSETORDER(1))
			SE4->(MSSEEK(XFILIAL("SE4")+SC5->C5_CONDPAG) ) //FILIAL+CONDICAO PAGTO
			
			SB1->(DBSETORDER(1))
			SB1->(MSSEEK(XFILIAL("SB1")+SC6->C6_PRODUTO))    //FILIAL+PRODUTO
			
			SB2->(DBSETORDER(1))
			SB2->(MSSEEK(XFILIAL("SB2")+SC6->(C6_PRODUTO+C6_LOCAL))) //FILIAL+PRODUTO+LOCAL
			
			SF4->(DBSETORDER(1))
			SF4->(MSSEEK(XFILIAL("SF4")+SC6->C6_TES))   //FILIAL+TES
			NPRCVEN := SC9->C9_PRCVEN
			AADD(APVLNFS,{  SC9->C9_PEDIDO,;
			SC9->C9_ITEM,;
			SC9->C9_SEQUEN,;
			SC9->C9_QTDLIB,;
			NPRCVEN,;
			SC9->C9_PRODUTO,;
			.F.,;
			SC9->(RECNO()),;
			SC5->(RECNO()),;
			SC6->(RECNO()),;
			SE4->(RECNO()),;
			SB1->(RECNO()),;
			SB2->(RECNO()),;
			SF4->(RECNO())})
		ENDIF
		DBSELECTAREA("SC9")
		DBSKIP()
	ENDDO
ENDIF
IF LEN(APVLNFS) > 0
	PERGUNTE("MT460A",.F.)
	MV_PAR17 := 1
	
	CNOTAAUX := MAPVLNFS(APVLNFS,_PSERIE, .F.       , .F.      , .F.       , .T.      , .F.      , 0       , 0           , .F. )
	
	_CNOTAS  += CFILANT+"-"+CNOTAAUX+"-"+_PSERIE+"/"
	AADD(_ANFGER, {SF2->F2_FILIAL, SF2->F2_SERIE, SF2->F2_DOC, SF2->F2_CLIENTE, SF2->F2_LOJA, SF2->F2_COND, SF2->F2_EMISSAO, SF2->F2_PREFIXO, NVLNOTA, ADA->ADA_NUMCTR,ADA->ADA_UTIPO}) //{1-EMP/FIL, 2-SERIE, 3-NOTA, 4-CLIENTE, 5-LOJA, 6-COND, 7-EMISSAO, 8-PREF, 9-VALOR, 10-CONTRATO,11-TIPO CTR}
	
ELSE
	MSGINFO(OEMTOANSI('PROBLEMAS AO GERAR NOTA FISCAL, POR FAVOR VERIFIQUE.'))
ENDIF

RETURN()



STATIC FUNCTION FAT01E(_PDTULTFEC, _PDTINIVIG, _PDTFIMVIG, _PVALOR) //RETORNA VALOR A SER COBRADO
*************************************************************************************************
LOCAL _NVALOR := 0

IF EMPTY(_PDTINIVIG)
	RETURN(_NVALOR)
ELSE
	_NVALOR := _PVALOR //SE O VALOR NAO ENTRAR EM NENHUMA REGRA ABAIXO SERA INTEGRAL
ENDIF

IF !EMPTY(_PDTFIMVIG) .AND. _PDTFIMVIG < DDATABASE //FAT.PARCIAL POR FIM DO PLANO   
	IF  _PDTFIMVIG > _PDTULTFEC // NAO COBRAR QUANDO FATURAMENTO FOR MAIOR QUE A FIM DE VINGENCIA 
		IF _PDTINIVIG > _PDTULTFEC // .AND. _PDTINIVIG < _AUX 
			IF _PDTINIVIG > _PDTFIMVIG
				_NVALOR := 0
				RETURN (_NVALOR)
			ELSE
				_NDIAS  := _PDTFIMVIG -_PDTINIVIG
			ENDIF
		ELSE
			_NDIAS  := _PDTFIMVIG - _PDTULTFEC
		ENDIF
		
		_nAuxDias := numDiaMe(iif(MONTH(DDATABASE)<>1,month(DDATABASE)-1,12))
		_NVLDIA := _PVALOR/_nAuxDias
		_NVALOR := _NVLDIA*_NDIAS
		RETURN(_NVALOR)
	ELSE
		_NVALOR := 0
		RETURN (_NVALOR)
	ENDIF
ENDIF

IF !EMPTY(_PDTINIVIG) .AND. _PDTINIVIG > _PDTULTFEC  //FAT.PARCIAL POR INICIO APOS CADASTRO CONTRATO
	_AUX := proxVenc(_PDTULTFEC)
	IF _PDTINIVIG>_AUX  //CASO PRA LINHA GRATUITA (NORMALMENTE 1 ANO)
		RETURN 0
	ENDIF
	_NDIAS  := DDATABASE-_PDTINIVIG
	_nAuxDias := numDiaMe(iif(MONTH(DDATABASE)<>1,month(DDATABASE)-1,12))
	_NVLDIA := _PVALOR/_nAuxDias
	_NVALOR := _NVLDIA*_NDIAS
	RETURN(_NVALOR)
ENDIF

RETURN(_NVALOR)



STATIC FUNCTION FAT01F() //REALIZA AJUSTES FINANCEIRO
*****************************************************
//AADD(_ANFGER,{1-EMP/FIL, 2-SERIE, 3-NOTA, 4-CLIENTE, 5-LOJA, 6-COND, 7-EMISSAO, 8-PREF, 9-VALOR, 10-CONTRATO})
//AADD(_APDEMO,{1-PRODUTO, 2-QUANT, 3-VL UNITARIO, 4-VL TOTAL,5-DESCRICAO} )
LOCAL _AREA 	:= GETAREA()
LOCAL _NVLTOT	:= 0
LOCAL _CCLI		:= CRIAVAR("E1_CLIENTE",.F.)
LOCAL _CLOJ		:= CRIAVAR("E1_LOJA",.F.)
LOCAL _CPREF	:= CRIAVAR("E1_PREFIXO",.F.)
LOCAL _CNUM		:= CRIAVAR("E1_NUM",.F.)
LOCAL _CPARC	:= CRIAVAR("E1_PARCELA",.F.)
LOCAL _CTIPO	:= CRIAVAR("E1_TIPO",.F.)
LOCAL _CCOND	:= CRIAVAR("E4_CODIGO",.F.)
LOCAL _DEMIS	:= CRIAVAR("E1_EMISSAO",.F.)
LOCAL _CNAT		:= CRIAVAR("E1_NATUREZ",.F.)
LOCAL _CVEND1	:= CRIAVAR("E1_VEND1",.F.)
LOCAL _CVEND2	:= CRIAVAR("E1_VEND2",.F.)
LOCAL _NBCOM1	:= CRIAVAR("E1_BASCOM1",.F.)
LOCAL _NBCOM2	:= CRIAVAR("E1_BASCOM2",.F.)
LOCAL _NPCCOM1	:= CRIAVAR("E1_COMIS1",.F.)
LOCAL _NPCCOM2	:= CRIAVAR("E1_COMIS2",.F.)
LOCAL _NVLCOM1	:= CRIAVAR("E1_VALCOM1",.F.)
LOCAL _NVLCOM2	:= CRIAVAR("E1_VALCOM2",.F.)
LOCAL _CTPEMP	:= CRIAVAR("E1_UEMP",.F.)

IF LEN(_ANFGER)>0
	
	FOR _I:=1 TO LEN(_ANFGER) //APAGA OS TITULOS ATUAIS
		DBSELECTAREA("SF2")
		DBSETORDER(1)
		IF DBSEEK(_ANFGER[_I,1]+_ANFGER[_I,3]+_ANFGER[_I,2])
			RECLOCK("SF2",.F.)
			SF2->F2_PREFIXO := "   "
			MSUNLOCK()
		ENDIF
		DBSELECTAREA("SE1")
		DBSETORDER(1)
		IF DBSEEK(XFILIAL("SE1")+_ANFGER[_I,8]+_ANFGER[_I,3]) //VERIFICA SE EXISTE PREF+NOTA
			WHILE !EOF() .AND. SE1->E1_FILIAL+SE1->E1_PREFIXO+SE1->E1_NUM==XFILIAL("SE1")+_ANFGER[_I,8]+_ANFGER[_I,3]
				IF SE1->E1_FILORIG+SE1->E1_CLIENTE+SE1->E1_LOJA+DTOS(SE1->E1_EMISSAO)==_ANFGER[_I,1]+_ANFGER[_I,4]+_ANFGER[_I,5]+DTOS(_ANFGER[_I,7]) //VERIFICA SE É DO MESMO FIL+CLI+EMISSAO
					RECLOCK("SE1",.F.)
					DBDELETE()
					MSUNLOCK()
				ENDIF
				DBSELECTAREA("SE1")
				DBSKIP()
			ENDDO
		ENDIF
		_NVLTOT += _ANFGER[_I,9]
	NEXT _I
	
	IF _NVLTOT>0 //GERA NOVOS TITULOS
		_CCLI	:= _ANFGER[1,4]
		_CLOJ	:= _ANFGER[1,5]
		_CPREF	:= ALLTRIM(GETMV("MV_UPRFCTR"))
		_CNUM 	:= _ANFGER[1,10]  
		_CTPEMP := _ANFGER[1,11]
		_CTIPO	:= "BOL"
		_DEMIS  := _ANFGER[1,7]
		_CCOND	:= _ANFGER[1,6]
		_NTXJUR := GETMV("MV_UTXJUR")
		
		DBSELECTAREA("SA1")
		DBSETORDER(1)
		DBSEEK(XFILIAL("SA1")+_CCLI+_CLOJ)
		_CNAT	:= SA1->A1_NATUREZ
		
		DBSELECTAREA("SE1")
		DBSETORDER(1)
		DBGOTOP()
		DBSEEK(XFILIAL("SE1")+_CPREF+PADR(_CNUM,9)+"999",.T.)
		DBSKIP(-1)
		IF SE1->E1_FILIAL+SE1->E1_PREFIXO+SE1->E1_NUM==XFILIAL("SE1")+_CPREF+PADR(_CNUM,9)
			_CPARC := SOMA1(SE1->E1_PARCELA)
		ELSE
			_CPARC := "001"
		ENDIF
		
		//_NVLTOT += FAT01G(_CCLI, _CLOJ, _CPREF, _CNUM) //BAIXA OS TITULOS ATRASADO PARA INCLUIR NA NOVA FATURA
		
		_ATIT := CONDICAO(_NVLTOT, _CCOND, 0, _DEMIS)
		
		DBSELECTAREA("SE1")
		RECLOCK("SE1",.T.)
		SE1->E1_FILIAL  := XFILIAL("SE1")
		SE1->E1_FILORIG := "LG01"
		SE1->E1_PREFIXO := _CPREF
		SE1->E1_NUM     := _CNUM
		SE1->E1_PARCELA := _CPARC
		SE1->E1_TIPO    := "BOL"
		SE1->E1_CLIENTE := _CCLI
		SE1->E1_LOJA    := _CLOJ
		SE1->E1_NOMCLI  := POSICIONE("SA1",1,XFILIAL("SA1")+_CCLI+_CLOJ,"A1_NREDUZ")
		SE1->E1_NATUREZ := _CNAT
		SE1->E1_EMISSAO := _DEMIS
		SE1->E1_EMIS1   := _DEMIS
		SE1->E1_LA      := "S"
		SE1->E1_SITUACA := "0"
		SE1->E1_SALDO   := _ATIT[1,2]
		SE1->E1_HIST    := "FATURAMENTO"
		SE1->E1_VENCTO  := _ATIT[1,1]
		SE1->E1_VENCREA := DATAVALIDA(_ATIT[1,1])
		SE1->E1_VENCORI := _ATIT[1,1]
		SE1->E1_MOEDA   := 1
		SE1->E1_VALOR   := _ATIT[1,2]
		SE1->E1_PORCJUR	:= _NTXJUR
		SE1->E1_VLCRUZ  := _ATIT[1,2]
		SE1->E1_STATUS  := "A"
		SE1->E1_SERIE	:= " "
	   //	SE1->E1_ORIGEM	:= "LIGFAT01"
	   	SE1->E1_ORIGEM  := "FINA040"
		SE1->E1_FLUXO   := " "
		SE1->E1_TIPODES := " "
		SE1->E1_FRETISS	:= "1"
		SE1->E1_RELATO	:= "2"
		SE1->E1_TPDESC	:= "C"
		SE1->E1_APLVLMN	:= "1" 
		SE1->E1_UEMP	:= _CTPEMP
		FOR _I:=1 TO LEN(_ANFGER)
			DO CASE
				CASE _I==1
					SE1->E1_UFILNF1 := _ANFGER[_I,1]
					SE1->E1_USERNF1	:= _ANFGER[_I,2]
					SE1->E1_UNUMNF1 := _ANFGER[_I,3]
					SE1->E1_UVALNF1	:= _ANFGER[_I,9]
				CASE _I==2
					SE1->E1_UFILNF2 := _ANFGER[_I,1]
					SE1->E1_USERNF2	:= _ANFGER[_I,2]
					SE1->E1_UNUMNF2 := _ANFGER[_I,3]
					SE1->E1_UVALNF2	:= _ANFGER[_I,9]
				CASE _I==3
					SE1->E1_UFILNF3 := _ANFGER[_I,1]
					SE1->E1_USERNF3	:= _ANFGER[_I,2]
					SE1->E1_UNUMNF3 := _ANFGER[_I,3]
					SE1->E1_UVALNF3	:= _ANFGER[_I,9]
				CASE _I==4
					SE1->E1_UFILNF4 := _ANFGER[_I,1]
					SE1->E1_USERNF4	:= _ANFGER[_I,2]
					SE1->E1_UNUMNF4 := _ANFGER[_I,3]
					SE1->E1_UVALNF4	:= _ANFGER[_I,9]
				CASE _I==5
					SE1->E1_UFILNF5 := _ANFGER[_I,1]
					SE1->E1_USERNF5	:= _ANFGER[_I,2]
					SE1->E1_UNUMNF5 := _ANFGER[_I,3]
					SE1->E1_UVALNF5	:= _ANFGER[_I,9]
			ENDCASE
		NEXT _I
		MSUNLOCK()
		
		FOR _I:=1 TO LEN(_ANFGER) //AJUSTA A DUPLICATA DA NOTA FISCAL
			DBSELECTAREA("SF2")
			DBSETORDER(1)
			IF DBSEEK(_ANFGER[_I,1]+_ANFGER[_I,3]+_ANFGER[_I,2]+_ANFGER[_I,4]+_ANFGER[_I,5]) //{1-EMP/FIL, 2-SERIE, 3-NOTA, 4-CLIENTE, 5-LOJA, 6-COND, 7-EMISSAO, 8-PREF, 9-VALOR, 10-CONTRATO})
				RECLOCK("SF2",.F.)
				SF2->F2_PREFIXO := _CPREF
				SF2->F2_DUPL	:= _CNUM
				MSUNLOCK()
			ENDIF
		NEXT _I
		
		FOR _I:=1 TO LEN(_APDEMO) //GRAVA DEMONSTRATIVO DE FATURA
			DBSELECTAREA("SZ1")
			RECLOCK("SZ1",.T.)
			SZ1->Z1_FILIAL 	:= XFILIAL("SZ1")
			SZ1->Z1_PREFIXO	:= _CPREF
			SZ1->Z1_NUM		:= _CNUM
			SZ1->Z1_PARCELA	:= _CPARC
			SZ1->Z1_TIPO	:= "BOL"
			
			IF !EMPTY(_APDEMO[_I,1])
				DBSELECTAREA("SB1")
				DBSETORDER(1)
				IF DBSEEK(XFILIAL("SB1")+_APDEMO[_I,1])				
					SZ1->Z1_COD		:= SB1->B1_COD
					IF !EMPTY(_APDEMO[_I,5])
						SZ1->Z1_DESC	:= _APDEMO[_I,5]
					ELSE
						SZ1->Z1_DESC	:= SB1->B1_DESC
					ENDIF
					SZ1->Z1_CATEG	:= SB1->B1_GRUPO
				ENDIF
			ELSE
				SZ1->Z1_COD		:= "OUTROS"
				SZ1->Z1_DESC	:= "PENDENCIAS ANTERIORES"
				SZ1->Z1_CATEG	:= "0201"
			ENDIF
			
			SZ1->Z1_QUANT	:= _APDEMO[_I,2]
			SZ1->Z1_VALOR	:= _APDEMO[_I,3]
			SZ1->Z1_TOTAL	:= _APDEMO[_I,4]
			
			DBSELECTAREA("SZ1")
			MSUNLOCK()
		NEXT _I
		
		AADD(_ATITULOS, {_CPREF, _CNUM, _CPARC, "BOL", _CCLI, _CLOJ})
		//INICIO - CRIA ESTRUTURA DE ARQUIVO PARA COLOCAR O PDF BOLETO NO SITE
		/*		
		_CDIRAUX := _CDIRPDF
		IF !EXISTDIR(_CDIRAUX)
			MAKEDIR(_CDIRAUX)
		ENDIF
		
		_CDIRAUX := _CDIRPDF+"\"+_CCLI+_CLOJ
		IF !EXISTDIR(_CDIRAUX)
			MAKEDIR(_CDIRAUX)
		ENDIF
		
		_CDIRAUX := _CDIRPDF+"\"+_CCLI+_CLOJ+"\"+ADA->ADA_NUMCTR
		IF !EXISTDIR(_CDIRAUX)
			MAKEDIR(_CDIRAUX)
		ENDIF

		//NOVA IMPLEMENTACAO PRA GRAVAR A DATA 		
		_CDIRAUX := _CDIRAUX+"\"+DTOS(DDATABASE)
		IF !EXISTDIR(_CDIRAUX)
			MAKEDIR(_CDIRAUX)
		ENDIF                                   
		_CDIRAUX += "\"
		//FIM - CRIA ESTRUTURA DE ARQUIVO PARA COLOCAR O PDF NO SITE
		
		IF _CIMPRUNI=="S"
			AADD(_ATITULOS, {_CPREF, _CNUM, _CPARC, "BOL", _CCLI, _CLOJ})
			
			//U_LIGFAT02(_CPREF, _CNUM, _CPARC, "BOL", _CCLI, _CLOJ, , _CDIRAUX, .F. ) //IMPRIMIR BOLETO PARA SITE
			U_LIGFAT16(_CPREF, _CNUM, _CPARC, "BOL", _CCLI, _CLOJ, , _CDIRAUX, .F. ) //IMPRIMIR BOLETO PARA SITE
		ELSE
			//U_LIGFAT02(_CPREF, _CNUM, _CPARC, "BOL", _CCLI, _CLOJ, , , .T.) //IMPRIMIR BOLETO
			U_LIGFAT16(_CPREF, _CNUM, _CPARC, "BOL", _CCLI, _CLOJ, , , .T.) //IMPRIMIR BOLETO
			
			//U_LIGFAT02(_CPREF, _CNUM, _CPARC, "BOL", _CCLI, _CLOJ, , _CDIRAUX, .F. ) //IMPRIMIR BOLETO PARA SITE
			U_LIGFAT16(_CPREF, _CNUM, _CPARC, "BOL", _CCLI, _CLOJ, , _CDIRAUX, .F. ) //IMPRIMIR BOLETO PARA SITE
		ENDIF
		
		//IMPRIMIR NOTAS FISCAIS
		FOR _X:=1 TO LEN(_ANFGER)
			IF ADA->ADA_UNFIMP=="S"
				//IF ALLTRIM(_ANFGER[_X,2])$"21/22" //TRATAMENTO PRA NF 21 E 22. 21 COMEÇA COM C E 22 COMEÇA COM D
				IF ("C" $ _ANFGER[_X,2] .OR. "D" $ _ANFGER[_X,2])
					U_LIGFAT03(_ANFGER[_X,1], _ANFGER[_X,3], _ANFGER[_X,2], _ANFGER[_X,4], _ANFGER[_X,5], , .T.) //IMPRIMIR NOTA MOD 21 E 22
					U_LIGFAT03(_ANFGER[_X,1], _ANFGER[_X,3], _ANFGER[_X,2], _ANFGER[_X,4], _ANFGER[_X,5], _CDIRAUX, .F.) //IMPRIMIR NOTA PARA SITE MOD 21 E 22
				ELSE
					U_LIGFAT05(_ANFGER[_X,1], _ANFGER[_X,3], _ANFGER[_X,2], _ANFGER[_X,4], _ANFGER[_X,5], , .T.) //IMPRIMIR NOTA FIBER
					U_LIGFAT05(_ANFGER[_X,1], _ANFGER[_X,3], _ANFGER[_X,2], _ANFGER[_X,4], _ANFGER[_X,5], _CDIRAUX, .F.) //IMPRIMIR NOTA PARA SITE FIBER
				ENDIF
			ELSE
//				IF ALLTRIM(_ANFGER[_X,2])$"21/22" //TRATAMENTO PRA NF 21 E 22. 21 COMEÇA COM C E 22 COMEÇA COM D
				IF ("C" $ _ANFGER[_X,2] .OR. "D" $ _ANFGER[_X,2])
					U_LIGFAT03(_ANFGER[_X,1], _ANFGER[_X,3], _ANFGER[_X,2], _ANFGER[_X,4], _ANFGER[_X,5], _CDIRAUX, .F.) //IMPRIMIR NOTA PARA SITE
				ELSE
					U_LIGFAT05(_ANFGER[_X,1], _ANFGER[_X,3], _ANFGER[_X,2], _ANFGER[_X,4], _ANFGER[_X,5], _CDIRAUX, .F.) //IMPRIMIR NOTA PARA SITE FIBER
				ENDIF
			ENDIF
		NEXT _X
		*/
	ENDIF
	
ENDIF

RETURN



STATIC FUNCTION FAT01G(_CCLIENTE, _CLOJA, _CPREF,_CNUM) //BAIXA OS TITULOS ATRASADO PARA INCLUIR NA NOVA FATURA
************************************
LOCAL _AREA 	:= GETAREA()
LOCAL _NVLRET   := 0
LOCAL _CQUERY 	:= " "

_CQUERY += " SELECT E1.E1_FILIAL, E1.E1_PREFIXO, E1.E1_NUM, E1.E1_PARCELA, E1.E1_TIPO, E1.E1_CLIENTE, E1.E1_LOJA, E1.E1_VENCTO, E1.E1_VENCREA, "
_CQUERY += "        E1.E1_VALOR, E1.E1_SALDO, E1.E1_PORCJUR, E1.E1_MULTA, E1.E1_PORTADO, E1.E1_AGEDEP, E1.E1_CONTA ,E1.E1_SITUACA "
_CQUERY += " FROM "+RETSQLNAME("SE1")+" E1 "
_CQUERY += " WHERE E1.E1_FILIAL = '"+XFILIAL("SE1")+"' "
_CQUERY += " AND E1.E1_CLIENTE = '"+_CCLIENTE+"' "
_CQUERY += " AND E1.E1_LOJA = '"+_CLOJA+"' "
_CQUERY += " AND E1.E1_PREFIXO = '"+_CPREF+"' "
_CQUERY += " AND E1.E1_NUM = '"+_CNUM+"' "
_CQUERY += " AND E1.E1_VENCTO >= '"+DTOS(ADA->ADA_UDTFEC)+"' "
_CQUERY += " AND E1.E1_VENCREA < '"+DTOS(DDATABASE)+"' "
_CQUERY += " AND E1.E1_VALOR <> E1.E1_SALDO "
_CQUERY += " AND E1.E1_SALDO > 0 "
_CQUERY += " AND E1.D_E_L_E_T_ = ' ' "
_CQUERY := CHANGEQUERY(_CQUERY)
IF SELECT("TRE1")!=0
	TRE1->(DBCLOSEAREA())
ENDIF
TCQUERY _CQUERY NEW ALIAS "TRE1"
DBSELECTAREA("TRE1")
DBGOTOP()
WHILE !EOF()
	
	NMULTA     := TRE1->E1_MULTA
	NJUROS     := ROUND((TRE1->E1_VALOR*((DDATABASE-STOD(TRE1->E1_VENCTO))*TRE1->E1_PORCJUR))/100,2)
	DBAIXA     := DDATABASE
	DDTCREDITO := DDATABASE
	CMOTBX     := "REF"
	CBANCO     := TRE1->E1_PORTADO
	CAGENCIA   := TRE1->E1_AGEDEP
	CCONTA     := TRE1->E1_CONTA
	NVALREC    := TRE1->E1_SALDO
	
	DBSELECTAREA("SE1")
	DBSETORDER(1)
	DBSEEK(XFILIAL("SE1")+TRE1->E1_PREFIXO+TRE1->E1_NUM+TRE1->E1_PARCELA+TRE1->E1_TIPO)
	
	ABAIXA  :=  {	{"E1_PREFIXO"  	,SE1->E1_PREFIXO	 	,NIL},;
	{"E1_NUM"      	,SE1->E1_NUM  	  		,NIL},;
	{"E1_PARCELA"  	,SE1->E1_PARCELA	 	,NIL},;
	{"E1_TIPO"	    ,SE1->E1_TIPO	  		,NIL},;
	{"E1_CLIENTE"  	,SE1->E1_CLIENTE	 	,NIL},;
	{"E1_LOJA"     	,SE1->E1_LOJA  			,NIL},;
	{"E1_SITUACA"   ,SE1->E1_SITUACA 		,NIL},;
	{"AUTMOTBX"		,CMOTBX			 		,NIL},;
	{"AUTBANCO"		,CBANCO			 		,NIL},;
	{"AUTAGENCIA"  	,CAGENCIA				,NIL},;
	{"AUTCONTA"		,CCONTA			 		,NIL},;
	{"AUTDTBAIXA"  	,DBAIXA   				,NIL},;
	{"AUTDTCREDITO"	,DDTCREDITO				,NIL},;
	{"AUTDTHIST"   	,"AGREG.NOVA FATURA"	,NIL},;
	{"AUTDESCONT"  	,0		     	 		,NIL},;
	{"AUTMULTA"    	,0	        	 		,NIL},;
	{"AUTJUROS"    	,0	        	 		,NIL},;
	{"AUTOUTGAS"   	,0 						,NIL},;
	{"AUTVLRPG"    	,0 						,NIL},;
	{"AUTVLRME"    	,0 						,NIL},;
	{"AUTVALREC"   	,NVALREC     	 		,NIL},;
	{"AUTCHEQUE"   	,""             	 	,NIL}}
	
	LMSERROAUTO := .F.
	LMSHELPAUTO := .T.
	MSEXECAUTO({|X,Y| FINA070(X,Y)},ABAIXA,3)
	IF LMSERROAUTO
		//MOSTRAERRO() 
		memowrite("\logerro\ERRO_"+strtran(time(),":","")+".log","ERRO AO TENTAR BAIXAR UM TITULO "+SE1->E1_NUM + SE1->E1_PARCELA + SE1->E1_TIPO + SE1->E1_CLIENTE + SE1->E1_LOJA)				
    //		RETURN NVALREC
	//ELSE 
	ENDIF
		_NVLRET += NVALREC
	//ENDIF
	
	DBSELECTAREA("TRE1")
	DBSKIP()
ENDDO
RESTAREA(_AREA)

IF _NVLRET>0
	AADD(_APDEMO,{" ", 1, _NVLRET, _NVLRET})
ENDIF

RETURN _NVLRET

//CALCULA VALOR DOS PRODUTOS E PRODUTOS2 (FIBER) //ADICIONA ARRAY OS ITENS E DEMONSTRATIVOS
STATIC FUNCTION FAT01H(_pCodPro ,_pDtIni, _pDtFim,_pNQtde, _pNTotal) 
DBSELECTAREA("SB1")
DBSETORDER(1)
IF DBSEEK(XFILIAL("SB1")+ _pCodPro)
						
	_NAUXPRCVEN := 0
	_NVLITEM  := FAT01E(_CDTULFEC, _pDtIni, _pDtFim, _pNTotal)
	_NVLTOTAL := ROUND((_NVLITEM*SB1->B1_UPC01)/100,2)
	_NVLUNIT  := ROUND(_NVLTOTAL/_pNQtde,2)
						
	_NAUXPRCVEN := ROUND(_NVLITEM/_pNQtde,2)
	IF _NVLTOTAL>0
		AADD(_AITENS,{SB1->B1_UEMP01, SB1->B1_USER01, SB1->B1_COD, _pNQtde, _NVLUNIT, _NVLTOTAL, ADB->ADB_TES, " "})
							
		IF !EMPTY(SB1->B1_UPROD02)
			_NVLITEM  := FAT01E(_CDTULFEC, _pDtIni, _pDtFim, _pNTotal)
			_NVLTOTAL := NOROUND((_NVLITEM*SB1->B1_UPC02)/100,2)
			_NVLUNIT  := NOROUND(_NVLTOTAL/_pNQtde,2)
			AADD(_AITENS,{SB1->B1_UEMP02, SB1->B1_USER02, SB1->B1_UPROD02, _pNQtde, _NVLUNIT, _NVLTOTAL, ADB->ADB_TES, " "})
		ENDIF
													
	ENDIF
	
	//VAI IMPRIMIR NO DEMONSTRATIVO MESMO COM VALOR ZERADO
	AADD(_APDEMO,{SB1->B1_COD, _pNQtde, _NAUXPRCVEN/*ADB->ADB_PRCVEN*/, _NAUXPRCVEN*_pNQtde /*ADB->ADB_TOTAL*/,""})
ENDIF

RETURN

STATIC FUNCTION VALIDPERG
*********************************
_SALIAS := ALIAS()
AREGS := {}

DBSELECTAREA("SX1")
DBSETORDER(1)
_CPERG := PADR(_CPERG,10)

//GRUPO/ORDEM/PERGUNTA/PERSPA/PERENG/VARIAVEL/TIPO/TAMANHO/DECIMAL/PRESEL/GSC/VALID/VAR01/DEF01/DEFSPA1/DEFENG1/CNT01/VAR02/DEF02/DEFSPA2/DEFENG2/CNT02/VAR03/DEF03/DEFSPA3/DEFENG3/CNT03/VAR04/DEF04/DEFSPA4/DEFENG4/CNT04/VAR05/DEF05/DEFSPA5/DEFENG5/CNT05/F3/GRPSXG
AADD(AREGS,{_CPERG,"01","CONTRATO DE      ?","","","MV_CH1","C",06,0,0, "G","","MV_PAR01","","","","","","","","","","","","","","","","","","","","","","","","","ADA",""})
AADD(AREGS,{_CPERG,"02","CONTRATO ATE     ?","","","MV_CH2","C",06,0,0, "G","","MV_PAR02","","","","","","","","","","","","","","","","","","","","","","","","","ADA",""})
AADD(AREGS,{_CPERG,"03","COND PGTO DE     ?","","","MV_CH3","C",03,0,0, "G","","MV_PAR03","","","","","","","","","","","","","","","","","","","","","","","","","SE4",""})
AADD(AREGS,{_CPERG,"04","COND PGTO ATE    ?","","","MV_CH4","C",03,0,0, "G","","MV_PAR04","","","","","","","","","","","","","","","","","","","","","","","","","SE4",""})

FOR I:=1 TO LEN(AREGS)
	IF !DBSEEK(_CPERG+AREGS[I,2])
		RECLOCK("SX1",.T.)
		FOR J:=1 TO FCOUNT()
			IF J <= LEN(AREGS[I])
				FIELDPUT(J,AREGS[I,J])
			ENDIF
		NEXT
		MSUNLOCK()
	ENDIF
NEXT
DBSELECTAREA(_SALIAS)
RETURN

static function proxVenc(_PDTULTFEC)
local _dRet
if month(_PDTULTFEC)==12
	_dRet := stod(CVALTOCHAR(YEAR(_PDTULTFEC)+1)+"01"+CVALTOCHAR(DAY(_PDTULTFEC)))
else
	_dRet := stod(CVALTOCHAR(YEAR(_PDTULTFEC))+STRZERO(MONTH(_PDTULTFEC)+1,2)+STRZERO(DAY(_PDTULTFEC),2))
endif

return _dRet

static function numDiaMe(_mes)
if _mes==1 .or. _mes==3 .or. _mes==5 .or. _mes==7 .or. _mes==8 .or. _mes==10 .or. _mes==12
	return 31
elseif _mes==2
	if bissexto(year(ddatabase))
		return 29
	else
		return 28
	endif
else
	return 30
endif

return 30

static Function Bissexto(nAno)
Local lRet := .F.
if ((nAno % 4)==0) .and. !((nAno % 100) == 0) .or. (nAno % 400)==0
	lRet := .T.
endif
return lRet